# -*- coding: utf-8 -*-
"""8. 컬렉션1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hIzxyh3Wj9EoWG2d4R87CG929yyMsTYU

# 컬렉션(list, tiple, set, dict)
1) list []
- 추가, 수정, 삭제, 언제나 가능
- [] 대괄호로 묶어주고 ,(콤마)로 값을 구분한다.

2) tuple ()
- 한번 생성하고 나면 변경이 불가능
- () 소괄호로 묶어주고 ,(콤마로) 값을 구분한다.

3) set()
- 순서가 없는 자료구조(비시퀀스)
- 중복된 값을 저장이 불가능
- {} 중괄호로 묶어주고  ,(콤마)로 값을 구분한다.

4) dict {key: value}
- 키 + 값이 한 쌍으로 관리하며 ,(콤마)로 값을 구분한다
- key는 중복 값을 허용하지 않으며, value는 중복 값을 허용한다
- key를 통해 value를 가져온다.
"""

# list
li1 = [1, 2, 3, 4, 5]
li1[2] = 100
print(li1[2])

li1[3:5]

li2 = [1.1, False, '가', 3, []]
print(li2)

# in 연산자(멤버십 연산자)
# 대상 in 객체

li3 = [10, 20, 30, 40, 50, 60, 70]
print(70 in li3)
print("a" in "abcdef")
print(not (100 in li3))
print(100 not in li3)

print("b" in {"a", 100})

# tuple
# 패킹
name = '홍길동', '장보고'
# 언패킹
hong, jang = name
print(hong)
print(jang)

print(name)

# name[0] = '얼룩이' # 불가능!
print(name[0])
print(name[1])

# 시퀀스 자료형
# 시퀀스 연산자
print(jang * 2) # 반복
print(hong + jang) # 연결
print([10, 20] * 2) # 반복
print([10, 20] + [30, 40]) # 연결

# 비시퀀스 자료형에서는 사용할 수 없다.
# print({10, 20} * 10)
# print({10, 20} + {30, 40})

#  빈 중괄호 dict
set1 = set()
di1 = {}

print(di1, type(di1))
print(set1, type(set1))

di2 = {'A점': ['짱구', '철수'], 'B점': ['유리', '맹구']}
print(di2['B점'])
print(di2['B점'][0])
print(di2['A점'][1])