# -*- coding: utf-8 -*-
"""12. 사용자 정의함수(function).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bspKLOL4ZgxBk_Y2cq6KARLdY3TM85KH
"""

def print_value(value):
    print(value)

print_value("나")
print_value(True)

# 1. 두 수를 전달하면 두 수를 더해주는 함수
def add_numbers(num1, num2):
    return num1 + num2

result = add_numbers(5, 3)
print(result)

# 2. 성과 이름을 전달하면 전체이름을 콘솔에 출력해주는 함수
def print_name(first_name, last_name):
    full_name = first_name + last_name
    print(full_name)

print_name("홍","길동")

# 가변인자(*)
def add(*number):
    total = 0
    for i in number:
        total += i
    return total
    # return sum(number)

print(add(1,2,3,4,5))

# 1. 이름을 다섯 번 출력해주는 함수
def print_name5(name):
    for i in range(5):
        print(name)

print_name5("홍길동")

# 2. 이름을 전달하면 n번 출력해주는 함수
def print_name_n(name, n):
    for i in range(n):
        print(name)

print_name_n("장보고", 3)

# 3. 어떤 값을 전달하면 실수인지, 정수인지 확인해주는 함수
def check_type(value):
    if isinstance(value, int):
        print("정수입니다.")
    elif isinstance(value, float):
        print("실수입니다.")
    else:
        print("정수도 실수도 아닙니다.")

check_type(1)
check_type(1.2)
check_type("ㄱ")

# 4. 사용자가 0,1,0,0,1,0,1,0,1 임의로 0과 1을 전달하면 0의 개수와, 1의 개수를 알려주는 함수
def count_zeros_ones(*numbers):
    zero_count = 0
    one_count = 0
    for number in numbers:
        if number == 0:
            zero_count += 1
        elif number == 1:
            one_count += 1
    print("0의 개수:", zero_count)
    print("1의 개수:", one_count)

count_zeros_ones(0,1,0,0,1,0,1,0,1)

# 1. 5개의 정수를 입력받고,
# 최솟값과 최댓값을 구해주는 함수(반환)
# 단, min(), max()를 사용하지 않는다.

def find_min_max(num1, num2, num3, num4, num5):
    min_value = num1
    max_value = num1

    for num in [num2, num3, num4, num5]:
        if num < min_value:
            min_value = num
        if num > max_value:
            max_value = num

    return min_value, max_value

min_value, max_value = find_min_max(5, 2, 9, 1, 7)
print("최솟값:", min_value)
print("최댓값:", max_value)

# 2. 문자열을 입력하면 소문자를 대문자로
# 대문자를 소문자로 바꿔주는 함수(반환)
# 단, .swapcase()를 사용하지 않는다.

def swap_case(string):
    result = ""
    for char in string:
        if char.islower():
            result += char.upper()
        elif char.isupper():
            result += char.lower()
        else:
            result += char

    return result

swapped_string = swap_case("Hello World")
print(swapped_string)

def swap_case2(string):
    result = ""
    for char in string:
        if char >= 'a' and char <= 'z':
            result += char.upper()
        elif char >= 'A' and char <= 'Z':
            result += char.lower()
        else:
            result += char

    return result

swapped_string = swap_case2("Hello World")
print(swapped_string)

# 3. 한글을 정수로 변경해주는 함수
# ex) "일공이사" -> 1024

def change_integer(string):
    hangle = {'공': 0, '일': 1, '이': 2, '삼': 3, '사': 4, '오': 5, '육': 6, '칠': 7, '팔': 8, '구': 9}
    result = ""
    for char in string:
        if char in hangle:
            result += str(hangle[char])
    return int(result)

result = change_integer("일공이사")
print(result)

# 4. 정수를 한글로 변경해주는 함수
# ex) "1024" -> "일공이사"
def change_hangle(number):
    hangle = "공일이삼사오육칠팔구"
    result = ""
    for index in number:
        result += str(hangle[int(index)])
    return result

result = change_hangle("1024")
print(result)